# Scaffolding generated by Caseadilla 0.0.6

module Caseadilla
  class TimeSlotsController < Caseadilla::CaseadillaController
  
    ## optional filters for defining usage according to Caseadilla::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @caseadilla_page_title = 'Time slots'
  		@time_slots = TimeSlot.order(sort_order(:time)).paginate :page => params[:page]
    end
  
    def show
      @caseadilla_page_title = 'View time slot'
      @time_slot = TimeSlot.find params[:id]
    end
  
    def new
      @caseadilla_page_title = 'Add a new time slot'
    	@time_slot = TimeSlot.new
    end

    def create
      @time_slot = TimeSlot.new time_slot_params
    
      if @time_slot.save
        flash[:notice] = 'Time slot created'
        redirect_to caseadilla_time_slots_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new time slot'
        render :action => :new
      end
    end
  
    def update
      @caseadilla_page_title = 'Update time slot'
      
      @time_slot = TimeSlot.find params[:id]
    
      if @time_slot.update_attributes time_slot_params
        flash[:notice] = 'Time slot has been updated'
        redirect_to caseadilla_time_slots_path
      else
        flash.now[:warning] = 'There were problems when trying to update this time slot'
        render :action => :show
      end
    end
 
    def destroy
      @time_slot = TimeSlot.find params[:id]

      @time_slot.destroy
      flash[:notice] = 'Time slot has been deleted'
      redirect_to caseadilla_time_slots_path
    end
  
    private
      
      def time_slot_params
        params.require(:time_slot).permit(:time)
      end

  end
end